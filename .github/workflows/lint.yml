name: Lint

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # -------------------------------
      # 🔹 Python Backend Linting
      # -------------------------------
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Python dependencies
        working-directory: backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run pylint (with score threshold)
        working-directory: backend
        run: |
          # Run pylint, save output
          pylint --rcfile=../.pylintrc $(git ls-files '*.py') > pylint-report.txt || true
          
          # Extract the global score (last line like "Your code has been rated at 7.50/10")
          SCORE=$(tail -n 2 pylint-report.txt | grep -oP '\d+(\.\d+)?(?=/10)')
          
          echo "Pylint score: $SCORE/10"
          
          # Fail job if score < 4.0
          if (( $(echo "$SCORE < 4.0" | bc -l) )); then
            echo "❌ Pylint score too low (< 4.0/10)"
            cat pylint-report.txt
            exit 1
          fi
          
          # Show report
          cat pylint-report.txt

      - name: Run black (format check only)
        working-directory: backend
        run: black --check .

      # -------------------------------
      # 🔹 React Frontend Linting
      # -------------------------------
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Node dependencies
        working-directory: frontend
        run: npm install

      - name: Run ESLint
        working-directory: frontend
        run: npm run lint
