name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  python-lint:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Python dependencies
        working-directory: backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run pylint
        working-directory: backend
        run: pylint $(git ls-files '*.py') | tee pylint-report.txt || true

      - name: Run black (format check only)
        working-directory: backend
        run: black --check . | tee black-report.txt || true

  react-lint:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Node dependencies
        working-directory: frontend
        run: npm install

      - name: Run ESLint
        working-directory: frontend
        run: npm run lint | tee eslint-report.txt || true

  backend-test:
    runs-on: ubuntu-latest
    needs: python-lint  # optional: run after lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Python dependencies
        working-directory: backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Django Tests
        working-directory: backend
        run: |
          python manage.py test --verbosity=2

  summary:
    runs-on: ubuntu-latest
    needs: [python-lint, react-lint, backend-test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Print lint summaries
        run: |
          echo "## üêç Python Lint Report"
          cat backend/pylint-report.txt || echo "No pylint report found"
          echo "## üñ§ Black Format Report"
          cat backend/black-report.txt || echo "No black report found"
          echo "## ‚öõÔ∏è React ESLint Report"
          cat frontend/eslint-report.txt || echo "No ESLint report found"

      - name: Print Django Test Summary
        run: |
          echo "## üß™ Django Test Report"
          # Django prints tests directly, no separate report file needed
